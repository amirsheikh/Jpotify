import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;

public class PlayListOption {
    private JPanel mainPanel;
    private JButton deleteIcon;
    private JButton addIcon;
    private JButton renameIcon;

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JButton getDeleteIcon() {
        return deleteIcon;
    }

    public JButton getAddIcon() {
        return addIcon;
    }

    public JButton getRenameIcon() {
        return renameIcon;
    }

    public PlayListOption(GUI app, PlayListWithGraphic playListWithGraphic, JFrame playListOptionFrame) {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
        addIcon.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                addIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/circleAdd - white.png")));
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                addIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/circleAddOutline - white.png")));
                JFrame frame = new JFrame("PlayListCheckBox");
                frame.setContentPane((new PlayListCheckBox(playListWithGraphic.getPlayList(), app.getAllMusics(), frame)).getMainPanel());
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
                app.revalidatePlayListScrollPanel();
                playListOptionFrame.dispatchEvent(new WindowEvent(playListOptionFrame, WindowEvent.WINDOW_CLOSING));

            }

            @Override
            public void mouseEntered(MouseEvent e) {
                super.mouseEntered(e);
                addIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/circleAddOutline - black.png")));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                super.mouseExited(e);
                addIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/circleAddOutline - white.png")));
            }
        });


        renameIcon.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                renameIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/rename-black.png")));
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                renameIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/rename-white.png")));
                playListOptionFrame.dispatchEvent(new WindowEvent(playListOptionFrame, WindowEvent.WINDOW_CLOSING));
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                super.mouseEntered(e);
                renameIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/rename-green.png")));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                super.mouseExited(e);
                renameIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/rename-white.png")));
            }
        });


        deleteIcon.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                deleteIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/delete-black.png")));
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                deleteIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/delete-white.png")));
                app.getPlayListScrollPanel().remove(playListWithGraphic.getPanel());
                app.getPlayLists().remove(playListWithGraphic.getPlayList());
                playListOptionFrame.dispatchEvent(new WindowEvent(playListOptionFrame, WindowEvent.WINDOW_CLOSING));
                app.revalidatePlayListScrollPanel();
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                super.mouseEntered(e);
                deleteIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/delete-green.png")));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                super.mouseExited(e);
                deleteIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/delete-white.png")));
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-15592942));
        mainPanel.setForeground(new Color(-855310));
        deleteIcon = new JButton();
        deleteIcon.setBackground(new Color(-15592942));
        deleteIcon.setBorderPainted(false);
        deleteIcon.setContentAreaFilled(false);
        deleteIcon.setFocusPainted(false);
        deleteIcon.setForeground(new Color(-855310));
        deleteIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/delete-white.png")));
        deleteIcon.setText("");
        mainPanel.add(deleteIcon, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addIcon = new JButton();
        addIcon.setBackground(new Color(-15592942));
        addIcon.setBorderPainted(false);
        addIcon.setContentAreaFilled(false);
        addIcon.setFocusPainted(false);
        addIcon.setForeground(new Color(-855310));
        addIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/circleAdd - white.png")));
        addIcon.setText("");
        mainPanel.add(addIcon, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        renameIcon = new JButton();
        renameIcon.setBackground(new Color(-15592942));
        renameIcon.setBorderPainted(false);
        renameIcon.setContentAreaFilled(false);
        renameIcon.setFocusPainted(false);
        renameIcon.setForeground(new Color(-855310));
        renameIcon.setIcon(new ImageIcon(getClass().getResource("/Logo/rename-white.png")));
        renameIcon.setText("");
        mainPanel.add(renameIcon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
