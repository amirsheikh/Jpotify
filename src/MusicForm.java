import com.mpatric.mp3agic.ID3v2;
import com.mpatric.mp3agic.Mp3File;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.Serializable;

public class MusicForm implements Serializable {
    private JPanel mainPanel;
    private JPanel panel1;
    private JButton likeButton;
    private JButton playButton;
    private JLabel detailsLabel;
    private JLabel imageLabel;
    private JButton lyricsButton;
    private String path;

    public MusicForm(String path) {
        this.path = path;
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
        detailsLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                try {
                    Mp3File mp3file = new Mp3File(path);
                    if (mp3file.hasId3v2Tag()) {
                        ID3v2 id3v2Tag = mp3file.getId3v2Tag();
                        String details = "Track: " + id3v2Tag.getTrack() + "\nArtist: " + id3v2Tag.getArtist() + "\nTitle: " + id3v2Tag.getTitle() + "\nAlbum: " + id3v2Tag.getAlbum()
                                + "\nAlbum: " + id3v2Tag.getAlbum() + "\nYear: " + id3v2Tag.getYear() + "\nGenre: " + id3v2Tag.getGenre() + " (" + id3v2Tag.getGenreDescription() + ")" + "\nComment: " + id3v2Tag.getComment();
                        JFrame frame = new JFrame("Details");
                        JPanel panel = new JPanel();
                        panel.setBackground(new Color(-15198184));
                        JTextArea textArea = new JTextArea(details);
                        textArea.setForeground(Color.WHITE);
                        textArea.setBackground(new Color(-15198184));
                        panel.add(textArea);
                        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                        frame.setLocation(dim.width / 2 - frame.getSize().width / 2, dim.height / 2 - frame.getSize().height / 2);
                        frame.setContentPane(panel);
                        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        frame.pack();
                        frame.setVisible(true);
                    }
                } catch (Exception e1) {
                    e1.printStackTrace();
                }
            }
        });
    }

    public JButton getLyricsButton() {
        return lyricsButton;
    }

    public JLabel getImageLabel() {
        return imageLabel;
    }

    public JLabel getDetailsLabel() {
        return detailsLabel;
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JButton getLikeButton() {
        return likeButton;
    }

    public JButton getPlayButton() {
        return playButton;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-14145496));
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-15198184));
        panel1.setForeground(new Color(-855310));
        mainPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(160, 220), new Dimension(160, 220), new Dimension(160, 220), 0, false));
        imageLabel = new JLabel();
        imageLabel.setBackground(new Color(-15198184));
        imageLabel.setText("");
        panel1.add(imageLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(160, 160), new Dimension(160, 160), new Dimension(160, 160), 0, false));
        likeButton = new JButton();
        likeButton.setBackground(new Color(-15198184));
        likeButton.setBorderPainted(false);
        likeButton.setContentAreaFilled(false);
        likeButton.setFocusPainted(false);
        likeButton.setText("");
        panel1.add(likeButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(33, 33), new Dimension(33, 33), new Dimension(33, 33), 0, false));
        playButton = new JButton();
        playButton.setBackground(new Color(-15198184));
        playButton.setBorderPainted(false);
        playButton.setContentAreaFilled(false);
        playButton.setFocusPainted(false);
        playButton.setText("");
        panel1.add(playButton, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(33, 33), new Dimension(33, 33), new Dimension(33, 33), 0, false));
        detailsLabel = new JLabel();
        detailsLabel.setBackground(new Color(-15198184));
        detailsLabel.setForeground(new Color(-855310));
        detailsLabel.setText("");
        panel1.add(detailsLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(160, 20), new Dimension(160, 20), new Dimension(160, 20), 0, false));
        lyricsButton = new JButton();
        lyricsButton.setBackground(new Color(-15198184));
        lyricsButton.setBorderPainted(false);
        lyricsButton.setContentAreaFilled(false);
        lyricsButton.setFocusPainted(false);
        lyricsButton.setText("");
        panel1.add(lyricsButton, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(33, 33), new Dimension(33, 33), new Dimension(33, 33), 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
